// Generated by CoffeeScript 1.6.3
define(function () {
    var Mediator;
    return Mediator = (function () {
        var components, instance;

        function Mediator() {
        }

        Mediator = function () {
            if (instance !== null) {
                throw new Error("Cannot instantiate more than one Mediator, use MySingleton.getInstance()");
            }
            return this.initialize();
        };

        instance = null;

        Mediator.prototype = {
            initialize: function () {
            }
        };

        Mediator.getInstance = function () {
            if (instance === null) {
                instance = new Mediator();
            }
            return instance;
        };

        components = {};

        Mediator.registerComponent = function (name, component) {
            var cmp;
            for (cmp in components) {
                if (components[cmp] === component) {
                    break;
                }
            }
            component.setMediator(Mediator);
            components[name] = component;
        };

        Mediator.unregisterComponent = function (name) {
            var cmp;
            for (cmp in components) {
                if (components[cmp] === name) {
                    delete components[cmp];
                }
            }
        };

        Mediator.broadcast = function (event, args, source) {
            var cmp;
            if (!event) {
                return;
            }
            args = args || [];
            for (cmp in components) {
                if (typeof components[cmp]["on" + event] === 'function') {
                    console.log("%c Mediator: event " + event + " on " + cmp + " ", "color: #bada55");
                    source = source || components[cmp];
                    components[cmp]["on" + event].apply(source, args);
                }
            }
        };

        Mediator.getInstance();

        return Mediator;

    }).call(this);
});

/*
 //@ sourceMappingURL=Mediator.map
 */
